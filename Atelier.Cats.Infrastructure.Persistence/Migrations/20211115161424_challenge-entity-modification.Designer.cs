// <auto-generated />
using System;
using Atelier.Cats.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Atelier.Cats.Infrastructure.Persistence.Migrations
{
    [DbContext(typeof(AtelierCatsContext))]
    [Migration("20211115161424_challenge-entity-modification")]
    partial class challengeentitymodification
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Atelier.Cats.Domain.Entities.Cat", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AtelierId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastUpdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasAlternateKey("AtelierId");

                    b.ToTable("Cat");
                });

            modelBuilder.Entity("Atelier.Cats.Domain.Entities.Challenge", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("LoserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("VoteDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("WinnerId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasAlternateKey("WinnerId", "LoserId");

                    b.HasIndex("LoserId");

                    b.ToTable("Challenge");
                });

            modelBuilder.Entity("Atelier.Cats.Domain.Entities.Challenge", b =>
                {
                    b.HasOne("Atelier.Cats.Domain.Entities.Cat", "Loser")
                        .WithMany("ChallengesLoser")
                        .HasForeignKey("LoserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Atelier.Cats.Domain.Entities.Cat", "Winner")
                        .WithMany("ChallengesWinner")
                        .HasForeignKey("WinnerId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Loser");

                    b.Navigation("Winner");
                });

            modelBuilder.Entity("Atelier.Cats.Domain.Entities.Cat", b =>
                {
                    b.Navigation("ChallengesLoser");

                    b.Navigation("ChallengesWinner");
                });
#pragma warning restore 612, 618
        }
    }
}
